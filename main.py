import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.dispatcher.router import Router
from aiogram.filters import Command

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
API_TOKEN = "7205454995:AAHNSTK4btRmMlvFEMeyIe-P_4jwEfw-FYY"

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –û—Å–Ω–æ–≤–Ω–æ–π —Ä–æ—É—Ç–µ—Ä
router = Router()
dp.include_router(router)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
def main_keyboard():
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –ø–µ—Ä–µ–¥–∞–≤–∞—è —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –≤ –ø–æ–ª–µ inline_keyboard
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="Button 1", callback_data="button_1"),
         InlineKeyboardButton(text="Button 2", callback_data="button_2")]
    ])
    return keyboard
# –ö–æ–º–∞–Ω–¥–∞ /start –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
@router.message(Command(commands=["start"]))
async def start_handler(message: types.Message):
    if message.chat.type in ["group", "supergroup"]:
        await message.reply("üëã –ü—Ä–∏–≤–µ—Ç! –Ø Family Quest –±–æ—Ç. –ì–æ—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –≥—Ä—É–ø–ø–µ! üéÆ", reply_markup=main_keyboard())
    else:
        await message.reply("–≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö. –î–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ —Å–µ–º–µ–π–Ω—ã–π —á–∞—Ç!")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
@router.callback_query(lambda c: c.data == "add_task")
async def add_task_callback(callback_query: types.CallbackQuery):
    await callback_query.message.answer("üîß –ù–∞–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å.")
    # –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º—ã –æ–∂–∏–¥–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.

@router.callback_query(lambda c: c.data == "done_task")
async def done_task_callback(callback_query: types.CallbackQuery):
    await callback_query.message.answer("‚úÖ –ó–∞–¥–∞—á–∞ –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è!")
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—É—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.

@router.callback_query(lambda c: c.data == "help")
async def help_callback(callback_query: types.CallbackQuery):
    help_text = (
        "ü§ñ Family Quest Bot ‚Äì –ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –≤–∞—à–µ–π —Å–µ–º—å–∏!\n\n"
        "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n"
        "- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É'.\n"
        "- –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–¥–∞—á: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–¥–∞—á—É'.\n"
        "- –ü–æ–º–æ—â—å: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü–æ–º–æ—â—å'.\n"
    )
    await callback_query.message.answer(help_text)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()

if name == "main":
    asyncio.run(main())